name: Scrape V2Nodes and Update configs.txt

on:
  push:
    paths:
      - 'v2ray_mining.py'
      - '.github/workflows/**'
  schedule:
    # every 6 hours (UTC). ویرایش کن به cron دلخواهت
    - cron: '0 */6 * * *'
  workflow_dispatch: {}

permissions:
  contents: write   # اجازهٔ نوشتن به repo برای commit کردن فایل

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # افزایش timeout برای تست پینگ
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 python-v2ray

      - name: Cache binaries
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            core_engine/
          key: ${{ runner.os }}-binaries-${{ hashFiles('**/v2ray_mining.py') }}
          restore-keys: |
            ${{ runner.os }}-binaries-

      - name: Make binaries executable (best-effort)
        run: |
          # try to make common names executable and move to tester name if present
          set -e
          if [ -d "core_engine" ]; then
            echo "Contents of core_engine before changes:"
            ls -la core_engine || true
            chmod +x core_engine/* || true
            # if there's a core_engine binary, move/copy it to tester for compatibility
            if [ -f core_engine/core_engine ]; then
              cp core_engine/core_engine core_engine/tester || true
              chmod +x core_engine/tester || true
            fi
            # common other names
            if [ -f core_engine/core-engine ]; then
              cp core_engine/core-engine core_engine/tester || true
              chmod +x core_engine/tester || true
            fi
            if [ -f core_engine/xray ]; then
              cp core_engine/xray core_engine/tester || true
              chmod +x core_engine/tester || true
            fi
          fi
          echo "After attempted fixes:"
          ls -la core_engine || true
          ls -la vendor || true
        shell: bash

      - name: Run scraper
        run: |
          python v2ray_mining.py

      - name: Show staged diff (for logs)
        run: |
          git add configs.txt || true
          echo "---- staged diff ----"
          git --no-pager diff --staged || true

      - name: Commit and push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git user
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add configs.txt || true

          # Only commit if there are staged changes
          if ! git diff --quiet --staged; then
            git commit -m "chore(scrape): update configs.txt (auto)"
            git push
            echo "Pushed changes."
          else
            echo "No changes to commit."
          fi
        shell: bash
