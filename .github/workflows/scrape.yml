name: Scrape V2Nodes and Update configs.txt

on:
  push:
    paths:
      - 'v2ray_mining.py'
      - '.github/workflows/**'
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 python-v2ray

      - name: Cache binaries
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            core_engine/
          key: ${{ runner.os }}-binaries-${{ hashFiles('**/v2ray_mining.py') }}
          restore-keys: |
            ${{ runner.os }}-binaries-

      - name: Make binaries executable (best-effort)
        run: |
          set -e
          echo "PWD: $(pwd)"
          echo "Listing root:"
          ls -la || true
          echo "Listing core_engine (before):"
          if [ -d core_engine ]; then
            ls -la core_engine || true
          else
            echo "core_engine not present yet."
          fi

          # make anything inside core_engine executable (best-effort)
          if [ -d core_engine ]; then
            chmod +x core_engine/* || true
            # select first regular file inside core_engine as tester (robust)
            first_file=$(find core_engine -maxdepth 1 -type f | head -n 1 || true)
            if [ -n "$first_file" ]; then
              echo "Using $first_file as tester candidate"
              cp -f "$first_file" vendor/tester || true
              chmod +x vendor/tester || true
            else
              echo "No regular files found inside core_engine; attempting to find binaries elsewhere"
            fi
          fi
          echo "Listing core_engine (after):"
          if [ -d core_engine ]; then
            ls -la core_engine || true
          fi
          echo "Listing vendor:"
          if [ -d vendor ]; then
            ls -la vendor || true
          fi

      - name: Run scraper
        run: |
          python v2ray_mining.py
        shell: bash

      - name: Show staged diff (for logs)
        run: |
          git add configs.txt || true
          echo "---- staged diff ----"
          git --no-pager diff --staged || true
        shell: bash

      - name: Commit and push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add configs.txt || true
          if ! git diff --quiet --staged; then
            git commit -m "chore(scrape): update configs.txt (auto)"
            git push
            echo "Pushed changes."
          else
            echo "No changes to commit."
          fi
        shell: bash
